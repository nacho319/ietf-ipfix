<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
    <!ENTITY rfc2119 PUBLIC '' 
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml'>
]>

<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>

<rfc ipr="trust200902" category="std" docName="draft-inacio-ipfix-penie-01.txt">
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc toc="yes"?>
<?rfc symrefs="yes"?>


<front>
	<title abbrev="IPFIX-PENIE">
		Private Enterprise Information Elements Registry Exchange
	</title>
	<author initials="C." surname="Inacio" fullname="Christopher Inacio">
		<organization abbrev="CMU">
			Carnegie Mellon University
		</organization>
		<address>
			<postal>
				<street>4500 5th Ave</street>
				<city>Pittsburgh</city>
				<region>PA</region>
				<country>United States</country>
				<code>15213</code>
			</postal>
			<phone>+1 412 268 - 3098</phone>
			<email>inacio@sei.cmu.edu</email>
			<uri>http://www.sei.cmu.edu</uri>
		</address>
	</author>

	<date year="2013" month="November" day="8"/>
	<area>OPS</area>
	<workgroup>IPFIX</workgroup>
	
	<abstract>
		<t>This extension to the IPFIX protocol is intended to provide a mechanism
			for IPFIX exporters which export private information elements to also
			transmit information to the collectors. The mechanism is designed to be
			able to send a URI with information about the private information
			elements via an options template. Using this mechanism an exporter can
			inform a collector about private enterprise information elements, the
			transition of private enterprise elements to IANA well known
			information elements, as well as usage information of various exporter
			structures for collector information.</t>
	</abstract>

</front>

<middle>
	<section title="Introduction">
		<t>The IPFIX protocol <xref target="RFC5101"/><xref target="RFC7011"/> defined a significant information element
		set for a large number of relevant network activities. The IPFIX
		protocol was also designed with the ability to extend its information
		model in two ways.  A standards based mechanism using an IANA registry for 
		general purpose public information elements is one way.  The protocol also
		allows for extension by enterprises using private enterprise numbers to define
		elements of limited interest. Beyond adding the ability to pass new information
		elements, the IPFIX protocol is designed to allow collectors the ability to skip
		information elements which cannot be comprehended.</t>

		<t>IPFIX was extended in <xref target="RFC5610"/> IPFIX Semantic Type Information to allow
		IPFIX send type semantic information about information elements. This
		mechanism allows an IPFIX exporter to send type semantic information
		along with a common name about an information element to the collector.
		This allows information elements that the collector would otherwise not
		be able to comprehend to provide much more information.</t>

		<t>The mechanism proposed here extends the Semantic Type Information in
		two ways. First, it allows a more complex definition of information to
		be presented, capturing the possible relationships contained within the
		IPFIX Structured Data extension. The IPFIX Structured Data extension,
		having been completed after the Semantic Type Information, is not covered in
		the Semantic Type Information. Secondly, by moving the information
		element metadata out from the potentially resource constrained IPFIX
		data channel, this extension allows a richer and comprehensive set of
		metadata to be expressed.</t>
	</section>
	
	<section title="Use Cases">
		<t>In order for a collector to be general purpose, the collector must be 
		capable of receiving IPFIX data streams from a large variety of 
		exporters.  In very basic flow export scenarios, the extra information
		that can be provided using this mechanism is not needed.  For example,
		simply exporting IP address pairs, transport protocol, transport
		protocol port pairs, and duration for example does not need enhanced
		information for a collector to store and present that information to
		a user.</t>

		<t>Unfortunately, understanding network traffic is significantly more 
		complex than simple TCP or UDP network connections.  With data elements
		covering tunneling protocols such as MPLS and GRE, the five tuple 
		previously mentioned may not even be enough to uniquely define a 
		network flow in the traffic.  The difficultly lies in capturing the
		structure of traffic defined in the layers present on the network
		(MPLS, IP, TCP, HTTP, HTTP fields) in such a manner that a collector
		can:
		<list style="numbers"> 
			<t>correctly reconstruct the packet structure captured by the probe and </t>
			<t>quickly determine which elements are of interest and which elements may be discarded.</t>
		</list>
		</t>
		
		<section title="Private Information Elements">
			<t>In the most simple case, a complete explanation of private enterprise
			elements can be provided to the collector, along with description text 
			that collector can use to enhance the data presentation to a human.  
			The information contained within the registry relies upon standard
			IPFIX type information <xref target="RFC5610"/>, but can also add field relationships.</t>

			<t>Additional, the registry allows for clearly telling a collector that
			a private enterprise element has been replaced by an IANA approved
			element.  This allows the collector to maintain historical data and
			continue to collect new data across exporter upgrade boundaries.</t>
		</section>

		<section title="Calculated or Unobserved Fields">
			<t>Some fields may be present in the exported IPFIX stream which are 
			derived by the the probe or exporting process.  These fields generally
			represent some type calculated field.  For example, the mean opinion 
			score (MOS) is often used metric for voice call quality and therefore
			applicable to VoIP operation.  Additional information provided within
			the registry information may include algorithm definition and caveats
			such that a collector may present more detailed information about the
			data to a user.</t>
		</section>

		<section title="Structured Data">
			<t>In order to capture the encapsulation properties of network traffic,
			structured data may be used by an exporter.  Collector implementation
			is significantly harder when subtemplate multilist structured data
			elements are included in the data stream.  While in virtually all
			other IPFIX data messages, the collector knows a priori via the template
			which data will be present in the message, this is not the case with
			the subtemplate multilist.  The collector need not decode the subtemplate 
			mutlilist, instead skipping over the data element by using the length value of
			the whole structure.  The issue for collector implementors is to be
			able to have the data to decide when to do the more expensive operation
			of decoding the subtemplate multilist or when to skip it.</t>

			<t>In many uses of the subtemplate multilist, a data value may precede the
			subtemplate multilist giving the collector information about the contents
			of the structure.  For example, a collector that does protocol feature
			extraction, (e.g. extracting request strings and return codes from HTTP as
			well as CODEC and security parameters from SIP) may have a sentinel value
			indicating the protocol decode (HTTP or SIP) which can be used to 
			differentiate the data inside the subtemplate multilist.  The subtemplate
			multilist may be used in this case to handle the variability of collecting
			features that are not always present (e.g. HTTP return codes).</t>

			<t>By gathering the additional registry information, the exporter can 
			provide additional context of sentinel values to structured data elements 
			and provide more complex relationship information than is possible within
			the IPFIX data messages.</t>
		</section>

		<section title = "Optional Feature Enablement / Hierarchal Feature Description">
			<t>An exporter may have optional licensed export for various features.  The 
			exporter may enable certain feature set across various product lines
			or only when certain libraries are present, for example.  Especially in
			the case of implementation dependencies, it is advantageous of the 
			exporter to be able to express the information element registry 
			information separately from the entire registry of elements.  For example, 
			in some cases, there are many thousands of possible information elements 
			that can be extracted, but limiting updates to protocol families 
			(e.g. tunneling protocols) would significantly reduce the burden on collector
			implementors.</t>

			<t>In this case, an exporter may send multiple registry pointers to the 
			collector, each one individually versioned.  Using this mechanism is intended
			to minimize the work on a collector to handle exporter upgrades.</t>
		</section>
	</section>
	
	<section title="Options Record Format">
		<t>The mechanism used to transmit the URI information from the exporter to
		the collector is an options template with a URI. The URI contains a
		pointer which provides well formatted, as specified in section 4,
		information about the semantic type information and description of the
		private information elements.  The data record may optionally contain
		an second alternate URI which may be used if the first URI cannot be
		contacted.  The first presented URI always has higher precedence than
		the second URI.</t>
		
		<figure>
			<artwork>
                     1                   2                   3   
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1  
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ 
|      Set ID = 3               |        Length = 14            |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|    Template ID = 257          |        Field Count =          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Scope Field Count =           |0| private ent. number     346 |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|    Field Length = 4           |   PEN Registry URI        XXX |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|    Field Length = 65536       |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
			</artwork>
			<postamble>Example PENIE Template Definition</postamble>
		</figure>


		<figure>
			<artwork>
                     1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|        Set ID = 257         |            Length = 50          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                 Private Enterprise Number                     |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                         Version                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|        Length = 39          |                                 |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                                 +
|          "http://tools.netsa.cert.org/yaf_pen.xml"            |
+                                                               +
|                                                               |
+                                                               +
|                                                               |
+                                                               +
|                                                               |
+                                                               +
|                                                               |
+                                                               +
|                                                               |
+                                                               +
|                                                               |
+                                                               +
|                                                               |
+                                                               +
|                                                               |
+                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
			</artwork>
			<postamble>Example PENIE Data Record</postamble>
		</figure>

		<figure>
			<artwork>
                     1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|        Set ID = 257         |            Length = 79          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                 Private Enterprise Number                     |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                         Version                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|        Length = 29          |                                 |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                                 +
|          "http://10.10.1.5/yaf_pen.xml"                       |
+                                                               +
|                                                               |
+                                                               +
|                                                               |
+                                                               +
|                                                               |
+                                                               +
|                                                               |
+                                                               +
|                                                               |
+                                                               +
|                                                               |
+                                                               +
|                                                               |
+                                                               +
|                                                               |
+                               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                               |     Length = 39               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         "http://tools.netsa.cert.org/yaf_pen.xml"             |
+                                                               +
|                                                               |
+                                                               +
|                                                               |
+                                                               +
|                                                               |
+                                                               +
|                                                               |
+                                                               +
|                                                               |
+                                                               +
|                                                               |
+                                                               +
|                                                               |
+                                                 +-+-+-+-+-+-+-+
|                                                 |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
			</artwork>
			<postamble>Example of a PENIE Data Record with a second alternate URI</postamble>
		</figure>

		<t>The options record allows for creating a URI reference for a private
		enterprise number. It is important to note that more than one URI per a
		single private enterprise number. The burden of resolving all declared
		registries falls onto the collector to be able to decode all
		information elements received from the exporters.</t>
	</section>

	<section title="Registry Design">
		<section title="Registry Introduction">
			<t>The registry design goals are to capture all the information that IPFIX
			Type Information <xref target="RFC5610"/> provides about individual elements, but to
			also present more metadata about both individual elements as well as
			have the ability to provide more information about a collection of
			elements.</t>
		</section>
		
		<section title="Registry Fields">
			<t>The top level of a registry contains the following additional elements:
			<list style="symbols">
				<t>Registry ID - This is an ID that can be used by the creator of the registry to be able to track the registry as a unique item.</t>
				<t>Version - Indicates the release version of the registry.</t>
				<t>Name - A common name that can be used to refer to the registry.</t>
				<t>Security Type - This is a new entry type that allows the complete set of elements defined in the registry to be contained within a security type class.  By allowing the collector to understand the security type, if present, of the information elements a new class of actions may be taken by a collector implementation.</t>
				<t>Policy Type -  Similar to the security type, this new entry allows the complete set of elements defined in the registry to be contained within a policy type class.  Again, similar to the security type class, the collector may take new actions based upon understanding the policy type of an information element.</t>
				<t>Canonical URI - This is the canonical URI to be able to locate the authoritative version of the registry.</t>
				<t>Root EID - This defines the Private Enterprise ID for all elements defined in the registry.</t>
				<t>Copyright - Optionally the copyright information for the registry</t>
				<t>Contact - Contact information to be able to contact the publisher of the registry.</t>
				<t>Directory - (I can't remember, but its a URI).</t>
			</list></t>
		</section>

		<section title="Information Element Fields">
			<t>Each information element within a registry may have the following elements:
			<list style="symbols">
				<t>ID - The information element ID.</t>
				<t>PEN - The private enterprise number.</t>
				<t>Data type - The data type of the element, as defined in RFC 5610.</t>
				<t>Semantics - The semantic of the element, as defined in RFC 5610.</t>
				<t>Units - The units of the element, as defined in RFC 5610.</t>
				<t>Description - The human readable (and hopefully understandable) description of the element.</t>
				<t>MIME Path - An optional MIME path definition of the element.</t>
				<t>Derived Value - A boolean value to indicate that the given element is a derived element and not an observed element.</t>
				<t>Algorithm Desc - For elements that are derived and not observed, a description of the algorithm used to produce the derived value.</t>
			</list></t>
			<t>Additionally, each information may optionally have some attributes when the information element is used as a discriminator for structured data elements associated with the element as follows:
			<list style="symbols">
				<t>Discriminator - Information Element reference to the structured data for which this element acts as a discriminator.</t>
				<t>SelectValue - The value mapping for the discriminator to indicate the contents of the structured data element.</t>
			</list></t>
		</section>
	</section>

	<section title="Example Usage">
		<t>This example shows a simple registry which contains a collection of private enterprise Information Elements.  This example is the most simple usage of a registry construction, without any structured data or deprecated private elements.</t>

		<section title="Simple Description of Private Elements">
			<t>This example shows a simple registry which contains a collection of private enterprise Information Elements.  This example is the most simple usage of a registry construction, without any structured data or deprecated private elements.</t>
			<figure>
				<artwork><![CDATA[
<enterprise-registry>
	<name>Pervasive Passive Collector Private Elements</name>
	<copyright>(C) 2013 Pervasive Passive, Inc.</copyright>
	<contact>blackhole@pervasivepassive.com</contact>
	<private-enterprise-number>65536</private-enterprise-number>
	<revisionNum>10</revisionNum>
	<revisionDate>6-Nov-2013</revisionDate>

	<registry>
		<id>http://www.pervasivepassive.com/ipfix/registry/PerPassReg.xml</id>
		<name>Pervasive Passive Private Element Registry</name>



		<element>
			<id>1040</id>
			<name>rcpDupAckCount</name>
			<description>A count of the number of duplicate ACK's observed on the flow</description>
			<data-type>unsigned64</data-type>
			<semantics>totalCounter</semantics>

			<units>none</units>
			<createDate>2013-11-07Z</createDate>
		</element>
		<element>
			<id>1041</id>
			<name>tcpSelAckCount</name>
			<description>TCP Selective Acknowledge Count</description>
			<data-type>unsigned64</data-type>
			<semantics>totalCounter</semantics>

			<units>none</units>
			<createDate>2013-11-06Z</createDate>
		</element>
		<element>
			<id>1042</id>
			<name>minTcpRwin</name>
			<description>minimum TCP window size observed for reverse direction</description>
			<data-type>unsigned32</data-type>
			<semantics>quantity</semantics>

			<units>octets</units>
			<createDate>2013-11-05Z</createDate>
		</element>
		<element>
			<id>1043</id>
			<name>meanTcpRwin</name>
			<description>The mean TCP window size observed for the reverse direction</description>
			<data-type>unsigned32</data-type>
			<semantics>quantity</semantics>

			<units>octets</units>
			<createDate>2013-11-04Z</createDate>
		</element>
		<element>
			<id>1044</id>
			<name>maxTcpRwin</name>
			<description>The maximum TCP window size observed for the reverse direction</description>
			<data-type>unsigned32</data-type>
			<semantics>quantity</semantics>

			<units>octets</units>
			<createDate>2013-11-03Z</createDate>
		</element>
	</registry>
</enterprise-registry>
					]]>
				</artwork>
			</figure>
		</section>

		
		<!--
		<section title="">
			<figure>
				<artwork><![CDATA[
					]]>
				</artwork>
			</figure>
		</section>
		-->
			
	</section>

	<section title="Security Considerations">
		<t>There are no security considerations relevant to this document, beyond the security considerations necessary in the IPFIX protocol specification <xref target="RFC5101"/>, <xref target="RFC7011"/> and their successors.  All transfers of the registry information may be done over any appropriate protocol, such as HTTPS, including security.</t>
	</section>
	
	<section title="IANA Considerations">
		<t>IANA needs to create two registries with expert review:
			<list style="empty">
				<t>Security types</t>
				<t>Policy types</t>
			</list>
		and create a code point for a new information element.</t>
	</section>

	<section title="Acknowledgements">
		<t>Thanks to Andrew Feren for thoughts on collector implementation for multi-vendor probes.  Thanks to Benoit Claise for continuing to urge me to finish this draft.  Thank you to Brian Trammell for using the QOF <xref target="QOF"/> information elements in the example private enterprise elements.  Thank you to the Carnegie Mellon University, Software Engineering Institute, CERT/CC (Emily Sarneso and Dan Ruef) for using YAF <xref target="YAF"/> private enterprise elements and structured data used in the examples.</t>
	</section>
</middle>



<back>
	<references title="Normative References">
		<?rfc include="reference.RFC.2119" ?>
		<?rfc include="reference.RFC.5101" ?>
		<?rfc include="reference.RFC.5102" ?>
		<?rfc include="reference.RFC.5610" ?>
		<?rfc include="reference.RFC.6313" ?>
		<?rfc include="reference.RFC.7011" ?>
	</references>
	<references title="Informative References">
		<?rfc include="reference.RFC.2223" ?>
		<reference anchor="QOF" target="http://github.com/britram/qof">
			<front>
				<title>QOF</title>
				<author initials="B." surname="Trammell" fullname="Brian Trammell">
					<organization abbrev="ETH Zurich">
						Swiss Federal Institute of Technology, Zurich
					</organization>
				</author>
				<date></date>
			</front>
		</reference>
		<reference anchor="YAF" target="http://tools.netsa.cert.org/">
			<front>
				<title>YAF</title>
				<author initials="E." surname="Sarneso" fullname="Emily Sarneso">
					<organization abbrev="CMU">
						Carnegie Mellon University
					</organization>
				</author>
				<author initials="D." surname="Ruef" fullname="Dan Ruef">
					<organization abbrev="CMU">
						Carnegie Mellon University
					</organization>
				</author>
				<author initials="C." surname="Inacio" fullname="Christopher Inacio">
					<organization abbrev="CMU">
						Carnegie Mellon University
					</organization>
				</author>
				<author initials="B." surname="Trammell" fullname="Brian Trammell">
					<organization abbrev="ETH Zurich">
						Swiss Federal Institute of Technology, Zurich
					</organization>
				</author>
				<date></date>
			</front>
		</reference>
	</references>
	
	<section title="Registry Schema">
		<figure>
			<artwork><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://www.ietf.org/ipfix/ipfix-private-element-registry/1.0" xmlns:r="http://www.ietf.org/ipfix/ipfix-private-element-registry/1.0">
  <!--
    It's unclear what the right way of referencing an info element ought
    to be.  By PEN/ID pair?  By some XML ID?  Both has problems.  Leave it
    text for now.

    some alternative (in RelaxNG) definition of info-elem-ref

     -- r-ieID = element r:id { xsd:integer {minInclusive="0" maxInclusive="65535"}}
     --  info-elem-ref = element r:info-elem-ref {
     --     element r:id { xsd:integer {minInclusive="0" maxInclusive="65535"}} &
     --     element r:private-enterprise-number { xsd:integer {minInclusive="0" maxInclusive="4294967295"}}
     -- }

  -->
  <xs:element name="data-type">
    <xs:simpleType>
      <xs:restriction base="xs:token">
        <xs:enumeration value="octetArray"/>
        <xs:enumeration value="unsigned8"/>
        <xs:enumeration value="unsigned16"/>
        <xs:enumeration value="unsigned32"/>
        <xs:enumeration value="unsigned64"/>
        <xs:enumeration value="signed8"/>
        <xs:enumeration value="signed16"/>
        <xs:enumeration value="signed32"/>
        <xs:enumeration value="signed64"/>
        <xs:enumeration value="float32"/>
        <xs:enumeration value="float64"/>
        <xs:enumeration value="boolean"/>
        <xs:enumeration value="macAddress"/>
        <xs:enumeration value="string"/>
        <xs:enumeration value="dateTimeSeconds"/>
        <xs:enumeration value="dateTimeMilliseconds"/>
        <xs:enumeration value="dateTimeMicroseconds"/>
        <xs:enumeration value="dateTimeNanoseconds"/>
        <xs:enumeration value="ipv4Address"/>
        <xs:enumeration value="ipv6Address"/>
        <xs:enumeration value="basicList"/>
        <xs:enumeration value="subTemplateList"/>
        <xs:enumeration value="subTemplateMultiList"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:element>
  <xs:element name="semantics">
    <xs:simpleType>
      <xs:restriction base="xs:token">
        <xs:enumeration value="default"/>
        <xs:enumeration value="quantity"/>
        <xs:enumeration value="totalCounter"/>
        <xs:enumeration value="deltaCounter"/>
        <xs:enumeration value="identifier"/>
        <xs:enumeration value="flags"/>
        <xs:enumeration value="list"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:element>
  <xs:element name="units">
    <xs:simpleType>
      <xs:restriction base="xs:token">
        <xs:enumeration value="none"/>
        <xs:enumeration value="bits"/>
        <xs:enumeration value="octets"/>
        <xs:enumeration value="packets"/>
        <xs:enumeration value="flows"/>
        <xs:enumeration value="seconds"/>
        <xs:enumeration value="milliseconds"/>
        <xs:enumeration value="microseconds"/>
        <xs:enumeration value="nanoseconds"/>
        <xs:enumeration value="4-octet words"/>
        <xs:enumeration value="messages"/>
        <xs:enumeration value="hops"/>
        <xs:enumeration value="entries"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:element>
  <!--

    Definition of an Information Element


  -->
  <xs:element name="element">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="id">
          <xs:simpleType>
            <xs:restriction base="xs:integer">
              <xs:minInclusive value="0"/>
              <xs:maxInclusive value="65535"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:element>
        <xs:element name="private-enterprise-number">
          <xs:simpleType>
            <xs:restriction base="xs:integer">
              <xs:minInclusive value="0"/>
              <xs:maxInclusive value="4294967295"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:element>
        <xs:element name="name" type="xs:token"/>
        <xs:element ref="r:description"/>
        <xs:element ref="r:data-type"/>
        <xs:element ref="r:semantics"/>
        <xs:element ref="r:units"/>
        <xs:element ref="r:range-begin"/>
        <xs:element ref="r:range-end"/>
        <xs:element ref="r:mime-path"/>
        <xs:element ref="r:derivedValue"/>
        <xs:element ref="r:algorithmDesc"/>
        <xs:element ref="r:createDate"/>
        <xs:element ref="r:deprecated"/>
        <xs:element ref="r:retired"/>
        <xs:element ref="r:standarized"/>
      </xs:choice>
      <xs:attribute name="discriminator" form="qualified"/>
      <xs:attribute name="selectValue" form="qualified"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="description" type="xs:string"/>
  <xs:element name="range-begin" type="xs:string"/>
  <xs:element name="range-end" type="xs:string"/>
  <xs:element name="mime-path" type="xs:string"/>
  <xs:element name="derivedValue" type="xs:boolean"/>
  <xs:element name="algorithmDesc" type="xs:string"/>
  <xs:element name="createDate" type="xs:date"/>
  <xs:element name="deprecated" type="xs:date"/>
  <xs:element name="retired" type="xs:date"/>
  <xs:element name="standarized">
    <xs:simpleType>
      <xs:restriction base="xs:integer">
        <xs:minInclusive value="0"/>
        <xs:maxInclusive value="65535"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:element>
  <!--

    Definition of a registry

    This is not the enterprise registry, which there is
    is only one per file.  This is a smaller structure
    which is mostly designed to group like elements
    together - having similar security or policy types
    for example

    It can contain elements or further sub-registries

  -->
  <xs:element name="registry">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="id" type="xs:anyURI"/>
        <xs:element name="name" type="xs:string"/>
        <xs:element ref="r:security-type"/>
        <xs:element ref="r:policy-type"/>
        <xs:element ref="r:url"/>
        <xs:element ref="r:root-eid"/>
        <xs:choice>
          <xs:element ref="r:registry"/>
          <xs:element ref="r:element"/>
        </xs:choice>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="security-type" type="xs:string"/>
  <xs:element name="policy-type" type="xs:string"/>
  <xs:element name="url" type="xs:anyURI"/>
  <xs:element name="root-eid" type="xs:integer"/>
  <!--

    Definition of an enterprise registry

    It contains metadata about the registry and
    one or more registries

  -->
  <xs:element name="enterprise-registry">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="name" type="xs:string"/>
        <xs:element ref="r:copyright"/>
        <xs:element ref="r:contact"/>
        <xs:element name="private-enterprise-number" type="xs:integer"/>
        <xs:element ref="r:directory"/>
        <xs:element ref="r:revisionNum"/>
        <xs:element ref="r:revisionDate"/>
        <xs:element ref="r:registry"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="copyright" type="xs:string"/>
  <xs:element name="contact" type="xs:string"/>
  <xs:element name="directory" type="xs:anyURI"/>
  <xs:element name="revisionNum" type="xs:integer"/>
  <xs:element name="revisionDate" type="xs:date"/>
</xs:schema>
				]]>
			</artwork>
		</figure>
	</section>

</back>

</rfc>



